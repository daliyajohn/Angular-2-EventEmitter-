"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var fallback = require("express-history-api-fallback");
var gulpLoadPlugins = require("gulp-load-plugins");
var openResource = require("open");
var path_1 = require("path");
var config_1 = require("../../config");
var codeChangeTool = require("./code_change_tools");
var plugins = gulpLoadPlugins();
function serveSPA() {
    codeChangeTool.listen();
}
exports.serveSPA = serveSPA;
function notifyLiveReload(e) {
    var fileName = e.path;
    codeChangeTool.changed(fileName);
}
exports.notifyLiveReload = notifyLiveReload;
function watchAppFiles(path, fileChangeCallback) {
    var paths = [
        path_1.join(config_1.default.APP_SRC, path)
    ].concat(config_1.default.TEMP_FILES.map(function (p) { return '!' + p; }));
    var busyWithCall = false;
    var changesWaiting = null;
    var afterCall = function () {
        busyWithCall = false;
        if (changesWaiting) {
            fileChangeCallback(changesWaiting, afterCall);
            changesWaiting = null;
        }
    };
    plugins.watch(paths, function (e) {
        if (busyWithCall) {
            changesWaiting = e;
            return;
        }
        busyWithCall = true;
        fileChangeCallback(e, afterCall);
    });
}
exports.watchAppFiles = watchAppFiles;
function serveDocs() {
    var server = express();
    server.use(config_1.default.APP_BASE, express.static(path_1.resolve(process.cwd(), config_1.default.DOCS_DEST)));
    server.listen(config_1.default.DOCS_PORT, function () {
        return openResource(getResourceUrl(config_1.default.DOCS_PORT));
    });
}
exports.serveDocs = serveDocs;
function serveCoverage() {
    var server = express();
    server.use(config_1.default.APP_BASE, express.static(path_1.resolve(process.cwd(), config_1.default.COVERAGE_TS_DIR)));
    server.listen(config_1.default.COVERAGE_PORT, function () {
        return openResource(getResourceUrl(config_1.default.COVERAGE_PORT));
    });
}
exports.serveCoverage = serveCoverage;
function serveProd() {
    var root = path_1.resolve(process.cwd(), config_1.default.PROD_DEST);
    var server = express();
    for (var _i = 0, _a = config_1.default.PROXY_MIDDLEWARE; _i < _a.length; _i++) {
        var proxy = _a[_i];
        server.use(proxy);
    }
    server.use(config_1.default.APP_BASE, express.static(root));
    server.use(fallback('index.html', { root: root }));
    server.listen(config_1.default.PORT, function () {
        return openResource(getResourceUrl(config_1.default.PORT));
    });
}
exports.serveProd = serveProd;
function getResourceUrl(port) {
    return "http://localhost:" + port + config_1.default.APP_BASE;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL21lZGlhL2RhbGl5YS9DMjcyRDdGRTcyRDdGNTVGL0dpdGh1YiBwcm9qZWN0cy9Bbmd1bGFyLTItRXZlbnRFbWl0dGVyLS90b29scy91dGlscy9zZWVkL3NlcnZlci50cyIsInNvdXJjZXMiOlsiL21lZGlhL2RhbGl5YS9DMjcyRDdGRTcyRDdGNTVGL0dpdGh1YiBwcm9qZWN0cy9Bbmd1bGFyLTItRXZlbnRFbWl0dGVyLS90b29scy91dGlscy9zZWVkL3NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFtQztBQUNuQyx1REFBeUQ7QUFDekQsbURBQXFEO0FBQ3JELG1DQUFxQztBQUNyQyw2QkFBcUM7QUFFckMsdUNBQWtDO0FBQ2xDLG9EQUFzRDtBQUV0RCxJQUFNLE9BQU8sR0FBUSxlQUFlLEVBQUUsQ0FBQztBQUt2QztJQUNFLGNBQWMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUMxQixDQUFDO0FBRkQsNEJBRUM7QUFPRCwwQkFBaUMsQ0FBSztJQUNwQyxJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3RCLGNBQWMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUhELDRDQUdDO0FBTUQsdUJBQThCLElBQVksRUFBRSxrQkFBc0Q7SUFDaEcsSUFBSSxLQUFLLEdBQWE7UUFDcEIsV0FBSSxDQUFDLGdCQUFNLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQztLQUMzQixDQUFDLE1BQU0sQ0FBQyxnQkFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsVUFBQyxDQUFDLElBQU8sTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTVELElBQUksWUFBWSxHQUFZLEtBQUssQ0FBQztJQUNsQyxJQUFJLGNBQWMsR0FBUSxJQUFJLENBQUM7SUFDL0IsSUFBSSxTQUFTLEdBQUc7UUFDZCxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLEVBQUUsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsa0JBQWtCLENBQUMsY0FBYyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1lBQzlDLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFDeEIsQ0FBQztJQUNILENBQUMsQ0FBQztJQUNGLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLFVBQUMsQ0FBTTtRQUMxQixFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLGNBQWMsR0FBRyxDQUFDLENBQUM7WUFDbkIsTUFBTSxDQUFDO1FBQ1QsQ0FBQztRQUNELFlBQVksR0FBRyxJQUFJLENBQUM7UUFDcEIsa0JBQWtCLENBQUMsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ25DLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQXRCRCxzQ0FzQkM7QUFLRDtJQUNFLElBQUksTUFBTSxHQUFHLE9BQU8sRUFBRSxDQUFDO0lBRXZCLE1BQU0sQ0FBQyxHQUFHLENBQ1IsZ0JBQU0sQ0FBQyxRQUFRLEVBQ2YsT0FBTyxDQUFDLE1BQU0sQ0FBQyxjQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLGdCQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FDekQsQ0FBQztJQUVGLE1BQU0sQ0FBQyxNQUFNLENBQUMsZ0JBQU0sQ0FBQyxTQUFTLEVBQUU7UUFDOUIsT0FBQSxZQUFZLENBQUMsY0FBYyxDQUFDLGdCQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFBOUMsQ0FBOEMsQ0FDL0MsQ0FBQztBQUNKLENBQUM7QUFYRCw4QkFXQztBQUtEO0lBQ0UsSUFBSSxNQUFNLEdBQUcsT0FBTyxFQUFFLENBQUM7SUFFdkIsTUFBTSxDQUFDLEdBQUcsQ0FDUixnQkFBTSxDQUFDLFFBQVEsRUFDZixPQUFPLENBQUMsTUFBTSxDQUFDLGNBQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsZ0JBQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUMvRCxDQUFDO0lBRUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxnQkFBTSxDQUFDLGFBQWEsRUFBRTtRQUNsQyxPQUFBLFlBQVksQ0FBQyxjQUFjLENBQUMsZ0JBQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUFsRCxDQUFrRCxDQUNuRCxDQUFDO0FBQ0osQ0FBQztBQVhELHNDQVdDO0FBS0Q7SUFDRSxJQUFJLElBQUksR0FBRyxjQUFPLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxFQUFFLGdCQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDcEQsSUFBSSxNQUFNLEdBQUcsT0FBTyxFQUFFLENBQUM7SUFFdkIsR0FBRyxDQUFDLENBQWMsVUFBdUIsRUFBdkIsS0FBQSxnQkFBTSxDQUFDLGdCQUFnQixFQUF2QixjQUF1QixFQUF2QixJQUF1QjtRQUFwQyxJQUFJLEtBQUssU0FBQTtRQUNaLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDbkI7SUFFRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFNLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUVsRCxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsRUFBRSxJQUFJLE1BQUEsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUU3QyxNQUFNLENBQUMsTUFBTSxDQUFDLGdCQUFNLENBQUMsSUFBSSxFQUFFO1FBQ3pCLE9BQUEsWUFBWSxDQUFDLGNBQWMsQ0FBQyxnQkFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQXpDLENBQXlDLENBQzFDLENBQUM7QUFDSixDQUFDO0FBZkQsOEJBZUM7QUFFRCx3QkFBd0IsSUFBWTtJQUNsQyxNQUFNLENBQUMsc0JBQW9CLElBQUksR0FBRyxnQkFBTSxDQUFDLFFBQVUsQ0FBQztBQUN0RCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCAqIGFzIGZhbGxiYWNrIGZyb20gJ2V4cHJlc3MtaGlzdG9yeS1hcGktZmFsbGJhY2snO1xuaW1wb3J0ICogYXMgZ3VscExvYWRQbHVnaW5zIGZyb20gJ2d1bHAtbG9hZC1wbHVnaW5zJztcbmltcG9ydCAqIGFzIG9wZW5SZXNvdXJjZSBmcm9tICdvcGVuJztcbmltcG9ydCB7IGpvaW4sIHJlc29sdmUgfSBmcm9tICdwYXRoJztcblxuaW1wb3J0IENvbmZpZyBmcm9tICcuLi8uLi9jb25maWcnO1xuaW1wb3J0ICogYXMgY29kZUNoYW5nZVRvb2wgZnJvbSAnLi9jb2RlX2NoYW5nZV90b29scyc7XG5cbmNvbnN0IHBsdWdpbnMgPSA8YW55Pmd1bHBMb2FkUGx1Z2lucygpO1xuXG4vKipcbiAqIFNlcnZlcyB0aGUgU2luZ2xlIFBhZ2UgQXBwbGljYXRpb24uIE1vcmUgc3BlY2lmaWNhbGx5LCBjYWxscyB0aGUgYGxpc3RlbmAgbWV0aG9kLCB3aGljaCBpdHNlbGYgbGF1bmNoZXMgQnJvd3NlclN5bmMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXJ2ZVNQQSgpIHtcbiAgY29kZUNoYW5nZVRvb2wubGlzdGVuKCk7XG59XG5cbi8qKlxuICogVGhpcyB1dGlsaXR5IG1ldGhvZCBpcyB1c2VkIHRvIG5vdGlmeSB0aGF0IGEgZmlsZSBjaGFuZ2UgaGFzIGhhcHBlbmVkIGFuZCBzdWJzZXF1ZW50bHkgY2FsbHMgdGhlIGBjaGFuZ2VkYCBtZXRob2QsXG4gKiB3aGljaCBpdHNlbGYgaW5pdGlhdGVzIGEgQnJvd3NlclN5bmMgcmVsb2FkLlxuICogQHBhcmFtIHthbnl9IGUgLSBUaGUgZmlsZSB0aGF0IGhhcyBjaGFuZ2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbm90aWZ5TGl2ZVJlbG9hZChlOmFueSkge1xuICBsZXQgZmlsZU5hbWUgPSBlLnBhdGg7XG4gIGNvZGVDaGFuZ2VUb29sLmNoYW5nZWQoZmlsZU5hbWUpO1xufVxuXG4vKipcbiAqIFRoaXMgdXRpbGl0eSBtZXRob2QgaXMgdXNlZCB0byB3YXRjaCBmb3IgdGhlIGN1cnJlbnQgcHJvamVjdCBmaWxlc1xuICogYW5kIGRvaW5nIGEgY2FsbGJhY2sgdXBvbiBjaGFuZ2VcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHdhdGNoQXBwRmlsZXMocGF0aDogc3RyaW5nLCBmaWxlQ2hhbmdlQ2FsbGJhY2s6IChlOiBhbnksIGRvbmU6ICgpID0+IHZvaWQpID0+IHZvaWQpIHtcbiAgbGV0IHBhdGhzOiBzdHJpbmdbXSA9IFtcbiAgICBqb2luKENvbmZpZy5BUFBfU1JDLCBwYXRoKVxuICBdLmNvbmNhdChDb25maWcuVEVNUF9GSUxFUy5tYXAoKHApID0+IHsgcmV0dXJuICchJyArIHA7IH0pKTtcblxuICBsZXQgYnVzeVdpdGhDYWxsOiBib29sZWFuID0gZmFsc2U7XG4gIGxldCBjaGFuZ2VzV2FpdGluZzogYW55ID0gbnVsbDtcbiAgbGV0IGFmdGVyQ2FsbCA9ICgpID0+IHtcbiAgICBidXN5V2l0aENhbGwgPSBmYWxzZTtcbiAgICBpZiAoY2hhbmdlc1dhaXRpbmcpIHtcbiAgICAgIGZpbGVDaGFuZ2VDYWxsYmFjayhjaGFuZ2VzV2FpdGluZywgYWZ0ZXJDYWxsKTtcbiAgICAgIGNoYW5nZXNXYWl0aW5nID0gbnVsbDtcbiAgICB9XG4gIH07XG4gIHBsdWdpbnMud2F0Y2gocGF0aHMsIChlOiBhbnkpID0+IHtcbiAgICBpZiAoYnVzeVdpdGhDYWxsKSB7XG4gICAgICBjaGFuZ2VzV2FpdGluZyA9IGU7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGJ1c3lXaXRoQ2FsbCA9IHRydWU7XG4gICAgZmlsZUNoYW5nZUNhbGxiYWNrKGUsIGFmdGVyQ2FsbCk7XG4gIH0pO1xufVxuXG4vKipcbiAqIFN0YXJ0cyBhIG5ldyBgZXhwcmVzc2Agc2VydmVyLCBzZXJ2aW5nIHRoZSBzdGF0aWMgZG9jdW1lbnRhdGlvbiBmaWxlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNlcnZlRG9jcygpIHtcbiAgbGV0IHNlcnZlciA9IGV4cHJlc3MoKTtcblxuICBzZXJ2ZXIudXNlKFxuICAgIENvbmZpZy5BUFBfQkFTRSxcbiAgICBleHByZXNzLnN0YXRpYyhyZXNvbHZlKHByb2Nlc3MuY3dkKCksIENvbmZpZy5ET0NTX0RFU1QpKVxuICApO1xuXG4gIHNlcnZlci5saXN0ZW4oQ29uZmlnLkRPQ1NfUE9SVCwgKCkgPT5cbiAgICBvcGVuUmVzb3VyY2UoZ2V0UmVzb3VyY2VVcmwoQ29uZmlnLkRPQ1NfUE9SVCkpXG4gICk7XG59XG5cbi8qKlxuICogU3RhcnRzIGEgbmV3IGBleHByZXNzYCBzZXJ2ZXIsIHNlcnZpbmcgdGhlIHN0YXRpYyB1bml0IHRlc3QgY29kZSBjb3ZlcmFnZSByZXBvcnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXJ2ZUNvdmVyYWdlKCkge1xuICBsZXQgc2VydmVyID0gZXhwcmVzcygpO1xuXG4gIHNlcnZlci51c2UoXG4gICAgQ29uZmlnLkFQUF9CQVNFLFxuICAgIGV4cHJlc3Muc3RhdGljKHJlc29sdmUocHJvY2Vzcy5jd2QoKSwgQ29uZmlnLkNPVkVSQUdFX1RTX0RJUikpXG4gICk7XG5cbiAgc2VydmVyLmxpc3RlbihDb25maWcuQ09WRVJBR0VfUE9SVCwgKCkgPT5cbiAgICBvcGVuUmVzb3VyY2UoZ2V0UmVzb3VyY2VVcmwoQ29uZmlnLkNPVkVSQUdFX1BPUlQpKVxuICApO1xufVxuXG4vKipcbiAqIFN0YXJ0cyBhIG5ldyBgZXhwcmVzc2Agc2VydmVyLCBzZXJ2aW5nIHRoZSBidWlsdCBmaWxlcyBmcm9tIGBkaXN0L3Byb2RgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2VydmVQcm9kKCkge1xuICBsZXQgcm9vdCA9IHJlc29sdmUocHJvY2Vzcy5jd2QoKSwgQ29uZmlnLlBST0RfREVTVCk7XG4gIGxldCBzZXJ2ZXIgPSBleHByZXNzKCk7XG5cbiAgZm9yIChsZXQgcHJveHkgb2YgQ29uZmlnLlBST1hZX01JRERMRVdBUkUpIHtcbiAgICBzZXJ2ZXIudXNlKHByb3h5KTtcbiAgfVxuXG4gIHNlcnZlci51c2UoQ29uZmlnLkFQUF9CQVNFLCBleHByZXNzLnN0YXRpYyhyb290KSk7XG5cbiAgc2VydmVyLnVzZShmYWxsYmFjaygnaW5kZXguaHRtbCcsIHsgcm9vdCB9KSk7XG5cbiAgc2VydmVyLmxpc3RlbihDb25maWcuUE9SVCwgKCkgPT5cbiAgICBvcGVuUmVzb3VyY2UoZ2V0UmVzb3VyY2VVcmwoQ29uZmlnLlBPUlQpKVxuICApO1xufVxuXG5mdW5jdGlvbiBnZXRSZXNvdXJjZVVybChwb3J0OiBudW1iZXIpIHtcbiAgcmV0dXJuIGBodHRwOi8vbG9jYWxob3N0OiR7cG9ydH0ke0NvbmZpZy5BUFBfQkFTRX1gO1xufVxuIl19